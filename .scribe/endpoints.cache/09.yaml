## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Tags de Tickets'
description: |-

  Endpoints para gestionar tags en tickets.
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/tickets/{ticket}/tags'
    metadata:
      groupName: 'Tags de Tickets'
      groupDescription: |-

        Endpoints para gestionar tags en tickets.
      subgroup: ''
      subgroupDescription: ''
      title: 'Asignar tags a un ticket.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket:
        name: ticket
        description: 'The ticket.'
        required: true
        example: asperiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      ticket_id:
        name: ticket_id
        description: 'El ID del ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      ticket: asperiores
      ticket_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      tags:
        name: tags
        description: 'Los IDs de los tags a asignar.'
        required: true
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      tags:
        - 1
        - 2
        - 3
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tickets/{ticket}/tags/{tag}'
    metadata:
      groupName: 'Tags de Tickets'
      groupDescription: |-

        Endpoints para gestionar tags en tickets.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remover un tag de un ticket.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket:
        name: ticket
        description: 'The ticket.'
        required: true
        example: nulla
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tag:
        name: tag
        description: 'The tag.'
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      ticket_id:
        name: ticket_id
        description: 'El ID del ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      tag_id:
        name: tag_id
        description: 'El ID del tag a remover.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      ticket: nulla
      tag: 8
      ticket_id: 1
      tag_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
